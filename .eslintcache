[{"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/App.js":"1","/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/index.js":"2","/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/components/Button/index.js":"3","/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/reportWebVitals.js":"4","/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/components/List/index.js":"5"},{"size":219,"mtime":1611617442473,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1611592866555,"results":"8","hashOfConfig":"7"},{"size":86,"mtime":1611596053279,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1611590321416,"results":"10","hashOfConfig":"7"},{"size":532,"mtime":1611615881221,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6lxco6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/App.js",["23","24"],"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/index.js",[],"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/components/Button/index.js",[],"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/reportWebVitals.js",[],"/home/orcioly/Developer/Aprendizado/curso-coders-club/reactapp/src/components/List/index.js",["25","26"],"import { useEffect, useState, useCallback, useMemo } from \"react\";\n\nconst set = new Set();\n\nexport default function List() {\n  const [contador, setContador] = useState(1);\n\n  const number = useMemo(() => 64554455 * 646546, []);\n\n  const handleSetContador = useCallback(() => {\n    setContador((oldContador) => oldContador + 1);\n    set.add(handleSetContador);\n  }, []);\n\n  console.log(set.size);\n\n  return (\n    <div>\n      Contador: {contador}\n      <button onClick={handleSetContador}>Atualiza contador</button>\n    </div>\n  );\n}\n",{"ruleId":"27","severity":1,"message":"28","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":19},{"ruleId":"27","severity":1,"message":"31","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},{"ruleId":"27","severity":1,"message":"28","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":19},{"ruleId":"27","severity":1,"message":"32","line":8,"column":9,"nodeType":"29","messageId":"30","endLine":8,"endColumn":15},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'number' is assigned a value but never used."]